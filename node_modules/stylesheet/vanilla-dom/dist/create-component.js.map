{"version":3,"sources":["../src/create-component.js"],"names":["getAttributeClassNames","attributes","filter","attribute","props","name","map","className","createComponent","displayName","selector","attrs","base","invalidProps","properties","Object","defineProperties","element","reduce","acc","property","get","set","value","willUpdate","render","initialAttributes","instance","CSSComponent","observe","propKeys","then","boundAttrs","attr","concat","document","createElement","requestAnimationFrame","console","log","dispatchEvent","assign","Event","join","cssRule","style","prop","template","module","exports"],"mappings":"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","file":"create-component.js","sourcesContent":["import { format } from '../../core/template';\nimport matchAttribute from '../../core/match-attribute';\nimport bindAttrsToCSSOM from '../../dom/dist/bind-attrs-to-cssom';\n\nconst getAttributeClassNames = attributes => props =>\n  attributes\n    .filter(attribute => matchAttribute(attribute, props[attribute.name]))\n    .map(attribute => attribute.className);\n\nconst createComponent = ({\n  displayName,\n  selector,\n  className,\n  attributes,\n  attrs,\n  base = 'div',\n  invalidProps,\n}) => class CSSComponent {\n  static create(initialAttributes) {\n    const instance = new CSSComponent(initialAttributes);\n    return instance.element;\n  }\n\n  static getAttributeClassNames = getAttributeClassNames(attributes);\n\n  static propKeys = [\n    ...attributes.map(attribute => attribute.name),\n    ...attrs.reduce((acc, attr) => acc.concat(attr.attributes), []),\n  ];\n\n  element = document.createElement(base);\n\n  willUpdate = false;\n\n  attrs = [];\n\n  observe(properties) {\n    Object.defineProperties(\n      this.element,\n      properties.reduce((acc, property) => {\n        return {\n          ...acc,\n          [property]: {\n            get: () => {\n              return this.props[property];\n            },\n            set: value => {\n              this.props[property] = value;\n              if (!this.willUpdate) {\n                this.willUpdate = true;\n\n                this.render();\n              }\n              return value;\n            },\n          },\n        };\n      }, {})\n    );\n  }\n\n  constructor(props = {}) {\n    this.props = props;\n    this.observe(CSSComponent.propKeys);\n    this.render();\n    bindAttrsToCSSOM(attrs).then(boundAttrs => {\n      this.attrs = boundAttrs;\n      this.render();\n    });\n  }\n\n  render = () => {\n    requestAnimationFrame(() => {\n      const { props } = this;\n      console.log('rendering', { props });\n      this.element.dispatchEvent(\n        Object.assign(\n          new Event('componentWillUpdate', {\n            props,\n          })\n        )\n      );\n      this.element.className = [className]\n        .concat(CSSComponent.getAttributeClassNames(props))\n        .concat(this.attrs.map(attr => attr.className))\n        .join(' ');\n      for (const attr of this.attrs) {\n        if (attr.cssRule) {\n          attr.cssRule.style[attr.prop] = format(attr.template, props);\n        }\n      }\n      this.element.dispatchEvent(Object.assign(new Event('componentDidUpdate', { props })));\n      this.willUpdate = false;\n    });\n  };\n};\n\nmodule.exports = createComponent;\n"]}