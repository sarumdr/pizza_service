{"version":3,"sources":["../src/bind-attrs-to-cssom.js"],"names":["getCSSRule","attr","className","document","styleSheets","cssStylesheet","i","cssRules","length","rule","selectorText","includes","selector","insertRule","Error","template","bindAttrsToCSSOM","then","attrs","map","Math","random","toString","slice","cssRule"],"mappings":";;;;;;;;AAAA;;;;;;AAEA,IAAMA,aAAa,SAAbA,UAAa,CAACC,IAAD,EAAOC,SAAP,EAAqB;AAAA;AAAA;AAAA;;AAAA;AACtC,yBAA4BC,SAASC,WAArC,8HAAkD;AAAA,UAAvCC,aAAuC;;AAChD,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,cAAcE,QAAd,CAAuBC,MAA3C,EAAmDF,GAAnD,EAAwD;AACtD,YAAMG,OAAOJ,cAAcE,QAAd,CAAuBD,CAAvB,CAAb;AACA,YAAIG,KAAKC,YAAL,IAAqBD,KAAKC,YAAL,CAAkBC,QAAlB,CAA2BV,KAAKW,QAAhC,CAAzB,EAAoE;AAClEP,wBAAcQ,UAAd,OAA8BX,SAA9B,UAA+CI,IAAI,CAAnD;AACA,iBAAOD,cAAcE,QAAd,CAAuBD,IAAI,CAA3B,CAAP;AACD;AACF;AACF;AATqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUtC,QAAM,IAAIQ,KAAJ,sBACgBb,KAAKc,QADrB,qEAAN;AAGD,CAbD;;AAeA,IAAMC,mBAAmB,SAAnBA,gBAAmB;AAAA,SACvB,kBAAQC,IAAR,CAAa;AAAA,WACXC,MAAMC,GAAN,CAAU,gBAAQ;AAChB,UAAMjB,YAAY,MAAMkB,KAAKC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAjC,CAAxB;AACA,UAAMC,UAAUxB,WAAWC,IAAX,EAAiBC,SAAjB,CAAhB;AACA,0BAAYD,IAAZ,IAAkBC,oBAAlB,EAA6BsB,gBAA7B;AACD,KAJD,CADW;AAAA,GAAb,CADuB;AAAA,CAAzB;;kBASeR,gB","file":"bind-attrs-to-cssom.js","sourcesContent":["import DOMLoad from './dom-load';\n\nconst getCSSRule = (attr, className) => {\n  for (const cssStylesheet of document.styleSheets) {\n    for (let i = 0; i < cssStylesheet.cssRules.length; i++) {\n      const rule = cssStylesheet.cssRules[i];\n      if (rule.selectorText && rule.selectorText.includes(attr.selector)) {\n        cssStylesheet.insertRule(`.${ className } {}`, i + 1);\n        return cssStylesheet.cssRules[i + 1];\n      }\n    }\n  }\n  throw new Error(\n    `The CSS rule of ${ attr.template } was not found. Make sure you imported the source CSS correctly`\n  );\n};\n\nconst bindAttrsToCSSOM = attrs =>\n  DOMLoad.then(() =>\n    attrs.map(attr => {\n      const className = 'a' + Math.random().toString(32).slice(6);\n      const cssRule = getCSSRule(attr, className);\n      return { ...attr, className, cssRule };\n    })\n  );\n\nexport default bindAttrsToCSSOM;\n"]}